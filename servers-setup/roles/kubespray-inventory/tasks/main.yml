---


####################### Configurando o Kubespray
- name: Fazer git clone do Kubespray
  git:
    repo: "https://github.com/kubernetes-sigs/kubespray.git"
    dest: "{{ playbook_dir }}/kubespray"
    version: "master"

- name: Definindo Variáveis
  set_fact:
    kubespray_folder: "{{ playbook_dir }}/kubespray"

- name: Copiar o arquivo de inventory de exemplo
  copy:
    src: "{{ kubespray_folder }}/inventory/sample"
    dest: "{{ kubespray_folder }}/inventory/homelab"


# ####################### Gerando o Template
- name: "Definir uma variável com todos os hosts"
  set_fact:
    all_hosts: "{{ hostvars | dict2items | json_query('[*].key') }}"

- name: "Criar uma lista com os nomes dos k8s-workers"
  set_fact:
    k8s_workers_list: "{{ k8s_workers_list | default([]) + [item] }}"
  loop: "{{ all_hosts }}"
  when: item.startswith('k8s-worker')

- name: "Criar uma lista com os nomes dos k8s-masters"
  set_fact:
    k8s_masters_list: "{{ k8s_masters_list | default([]) + [item] }}"
  loop: "{{ all_hosts }}"
  when: item.startswith('k8s-master')

- name: "Copiando template de inventory.ini"
  template:
    src: "inventory.ini.j2"
    dest: "{{ kubespray_folder }}/inventory/homelab/sample/inventory.ini"

# ####################### Configurando o Kubespray
- name: "Configure Kubespray"
  replace:
    path: "{{ item.file }}"
    regexp: "{{ item.regex }}"
    replace: "{{ item.replace }}"
  loop:
    # - { file: "{{ kubespray_folder }}/inventory/homelab/sample/group_vars/all/all.yml", regex: '^# kube_read_only_port:', replace: 'kube_read_only_port: 10255' }
    - { file: "{{ kubespray_folder }}/inventory/homelab/sample/group_vars/k8s_cluster/k8s-cluster.yml", regex: 'enable_nodelocaldns:\s*true', replace: 'enable_nodelocaldns: false' }
    # - { file: "{{ kubespray_folder }}/inventory/homelab/sample/group_vars/k8s_cluster/k8s-cluster.yml", regex: 'kube_network_plugin:\s*calico', replace: 'kube_network_plugin: flannel' }
    # - { file: "{{ kubespray_folder }}/inventory/homelab/sample/group_vars/k8s_cluster/k8s-net-flannel.yml", regex: '^# flannel_interface:', replace: 'flannel_interface: eth0' }